{"version":3,"file":"InstantIssuing.yaml-C3fRbQmO.js","sources":["../../../node_modules/.zudoku/processed/InstantIssuing.yaml.js"],"sourcesContent":["const __refs = Array.from({ length: 7 }, () => ({}));\nconst __refMap = {\n  \"#/components/parameters/apiKey\": __refs[0],\n  \"#/components/parameters/contentType\": __refs[1],\n  \"#/components/schemas/Customer\": __refs[2],\n  \"#/components/schemas/SuccessEnvelope\": __refs[3],\n  \"#/components/schemas/BadRequest\": __refs[4],\n  \"#/components/schemas/CardAlreadyAssigned\": __refs[5],\n  \"#/components/responses/LambdaTimeout\": __refs[6]\n};\nObject.assign(__refs[0], {\n  \"name\": \"x-api-key\",\n  \"in\": \"header\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"string\"\n  }\n});\nObject.assign(__refs[1], {\n  \"name\": \"Content-Type\",\n  \"in\": \"header\",\n  \"required\": true,\n  \"schema\": {\n    \"type\": \"string\",\n    \"default\": \"application/json\"\n  }\n});\nObject.assign(__refs[2], {\n  \"type\": \"object\",\n  \"required\": [\n    \"RequestType\",\n    \"AccountNum\",\n    \"CardRefNum\",\n    \"EmbossedName\",\n    \"NationalId\",\n    \"Passport\",\n    \"FirstName\",\n    \"LastName\"\n  ],\n  \"properties\": {\n    \"RequestType\": {\n      \"type\": \"string\",\n      \"description\": \"- `NewAccountNewCustomer`: New customer  \\n- `NewAccountExistingCustomer`: Existing customer\\n\"\n    },\n    \"CardRefNum\": {\n      \"type\": \"string\"\n    },\n    \"EmbossedName\": {\n      \"type\": \"string\"\n    },\n    \"AccountNum\": {\n      \"type\": \"string\"\n    },\n    \"FirstName\": {\n      \"type\": \"string\",\n      \"description\": \"Mandatory for new customers\"\n    },\n    \"MiddleName\": {\n      \"type\": \"string\"\n    },\n    \"LastName\": {\n      \"type\": \"string\",\n      \"description\": \"Mandatory for new customers\"\n    },\n    \"NationalId\": {\n      \"type\": \"string\",\n      \"description\": \"Mandatory if Passport is not provided\"\n    },\n    \"Passport\": {\n      \"type\": \"string\",\n      \"description\": \"Mandatory if NationalId is not provided\"\n    },\n    \"BirthDate\": {\n      \"type\": \"string\",\n      \"format\": \"date\",\n      \"pattern\": \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\",\n      \"description\": \"Date of birth in YYYY-MM-DD format\",\n      \"examples\": [\n        \"1990-01-01\"\n      ]\n    },\n    \"Email\": {\n      \"type\": \"string\",\n      \"format\": \"email\"\n    },\n    \"MobilePhone\": {\n      \"type\": \"string\"\n    },\n    \"StreetTitle\": {\n      \"type\": \"string\"\n    },\n    \"Zip\": {\n      \"type\": \"string\"\n    }\n  }\n});\nObject.assign(__refs[3], {\n  \"type\": \"object\",\n  \"required\": [\n    \"code\",\n    \"params\"\n  ],\n  \"properties\": {\n    \"code\": {\n      \"type\": \"string\",\n      \"examples\": [\n        \"SUCCESS_REQUEST_PROCESSED\"\n      ]\n    },\n    \"params\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"requestType\"\n      ],\n      \"properties\": {\n        \"requestType\": {\n          \"type\": \"string\",\n          \"examples\": [\n            \"NewAccountNewCustomer\"\n          ]\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[4], {\n  \"type\": \"object\",\n  \"required\": [\n    \"code\",\n    \"params\"\n  ],\n  \"properties\": {\n    \"code\": {\n      \"type\": \"string\",\n      \"examples\": [\n        \"ERR_VALIDATION_FAILED\"\n      ]\n    },\n    \"params\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"missingProperty\"\n      ],\n      \"properties\": {\n        \"missingProperty\": {\n          \"type\": \"string\",\n          \"examples\": [\n            \"RequestType\"\n          ]\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[5], {\n  \"type\": \"object\",\n  \"required\": [\n    \"code\",\n    \"params\"\n  ],\n  \"properties\": {\n    \"code\": {\n      \"type\": \"string\",\n      \"examples\": [\n        \"ERR_CARD_ALREADY_ASSIGNED\"\n      ]\n    },\n    \"params\": {\n      \"type\": \"object\",\n      \"required\": [\n        \"message\"\n      ],\n      \"properties\": {\n        \"message\": {\n          \"type\": \"string\",\n          \"examples\": [\n            \"This Card Is Already Assigned To A Customer!\"\n          ]\n        }\n      }\n    }\n  }\n});\nObject.assign(__refs[6], {\n  \"description\": \"Gateway Timeout – task took too long\",\n  \"content\": {\n    \"application/json\": {\n      \"schema\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"errorMessage\"\n        ],\n        \"properties\": {\n          \"errorMessage\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"Task timed out after 1.10 seconds\"\n            ]\n          }\n        }\n      },\n      \"examples\": {\n        \"lambdaTimeout\": {\n          \"summary\": \"Lambda execution timed out\",\n          \"value\": {\n            \"errorMessage\": \"Task timed out after 1.10 seconds\"\n          }\n        }\n      }\n    }\n  }\n});\nexport const schema = {\n  \"openapi\": \"3.1.1\",\n  \"info\": {\n    \"title\": \"Enza REST API Documentation\",\n    \"description\": \"**Welcome to the Enza REST API Developer Portal. Our API provides seamless integration for instant issuing services across Africa. This portal offers all the necessary tools, detailed documentation, and API endpoints required to empower your financial operations with real-time card issuance capabilities. Explore the portal, integrate with ease, and unlock secure, efficient, and scalable instant issuing solutions.**\\n\",\n    \"version\": \"2025-02-16T14:26:47Z\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://uat-api.enza.cloud/TX/v1\"\n    }\n  ],\n  \"tags\": [\n    {\n      \"name\": \"Instant Issuing\",\n      \"description\": \"Instant Issuing Operations\"\n    },\n    {\n      \"name\": \"Cards\",\n      \"description\": \"Cards Operations\"\n    }\n  ],\n  \"paths\": {\n    \"/instantissuing\": {\n      \"post\": {\n        \"operationId\": \"instantIssuingRequest\",\n        \"summary\": \"Instant Issuing Request\",\n        \"description\": \"## Overview  \\nThis API endpoint lets you link a pre-produced card to a customer's account. It works in two ways:  \\n1. **New customer:** Create an account *and* link the card.  \\n2. **Existing customer:** Create a new account for an existing customer and link the card.  \\n\\n## `RequestType`  \\n| Scenario                | Value                       |\\n|-------------------------|-----------------------------|\\n| New customer            | `NewAccountNewCustomer`     |\\n| Existing customer       | `NewAccountExistingCustomer`|\\n\",\n        \"tags\": [\n          \"Instant Issuing\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": __refMap[\"#/components/schemas/Customer\"],\n              \"examples\": {\n                \"default\": {\n                  \"value\": {\n                    \"RequestType\": \"NewAccountNewCustomer\",\n                    \"LastName\": \"EEE\",\n                    \"FirstName\": \"Cust02\",\n                    \"BirthDate\": \"1990-01-20\",\n                    \"Passport\": \"76238310075\",\n                    \"Email\": \"test@test.com\",\n                    \"MobilePhone\": \"9991234567\",\n                    \"StreetTitle\": \"Baker's Str\",\n                    \"Zip\": \"WC1X 9NX\",\n                    \"AccountNum\": \"AAABBB150573\",\n                    \"CardRefNum\": \"000515\",\n                    \"EmbossedName\": \"Cust02 New\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/SuccessEnvelope\"],\n                \"examples\": {\n                  \"directSuccess\": {\n                    \"summary\": \"Direct success example\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_REQUEST_PROCESSED\",\n                      \"params\": {\n                        \"requestType\": \"NewAccountNewCustomer\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request – validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/BadRequest\"],\n                \"examples\": {\n                  \"validationFailure\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"missingProperty\": \"RequestType\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Conflict – card already assigned\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": __refMap[\"#/components/schemas/CardAlreadyAssigned\"],\n                \"examples\": {\n                  \"conflictError\": {\n                    \"summary\": \"Card already assigned example\",\n                    \"value\": {\n                      \"code\": \"ERR_CARD_ALREADY_ASSIGNED\",\n                      \"params\": {\n                        \"message\": \"This Card Is Already Assigned To A Customer!\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": {\n            \"description\": \"Gateway Timeout\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"errorMessage\"\n                  ],\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"string\",\n                      \"description\": \"Timeout error message\",\n                      \"examples\": [\n                        \"Task timed out after 1.10 seconds\"\n                      ]\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"lambdaTimeout\": {\n                    \"summary\": \"Lambda execution timed out\",\n                    \"value\": {\n                      \"errorMessage\": \"Task timed out after 1.10 seconds\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/cards/tdsenrollement\": {\n      \"post\": {\n        \"operationId\": \"changeEcommerceStatus\",\n        \"summary\": \"Change E-commerce Status\",\n        \"description\": \"Modify the e-commerce status for a card by supplying `ECstatusEnable` and the card reference number.\",\n        \"tags\": [\n          \"Cards\"\n        ],\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"description\": \"Details for updating ECstatus of a card.\",\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"ECstatusEnable\",\n                  \"CardRefNum\"\n                ],\n                \"properties\": {\n                  \"CardRefNum\": {\n                    \"type\": \"string\",\n                    \"description\": \"Card reference number\"\n                  },\n                  \"ECstatusEnable\": {\n                    \"type\": \"string\",\n                    \"description\": \"EC status: `\\\"1\\\"` = Enrolled, `\\\"0\\\"` = Not enrolled\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_ECSTATUS_CHANGED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"status\"\n                      ],\n                      \"properties\": {\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Enabled\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful Request Example\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_ECSTATUS_CHANGED\",\n                      \"params\": {\n                        \"status\": \"Enabled\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request – validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_VALIDATION_FAILED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"missingProperty\"\n                      ],\n                      \"properties\": {\n                        \"missingProperty\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"CardRefNum\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"missingProperty\": \"CardRefNum\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Conflict – token not found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_READTOKEN_DECLINED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"missingProperty\"\n                      ],\n                      \"properties\": {\n                        \"missingProperty\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Token not found\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"conflictExample\": {\n                    \"summary\": \"Token not found\",\n                    \"value\": {\n                      \"code\": \"ERR_READTOKEN_DECLINED\",\n                      \"params\": {\n                        \"missingProperty\": \"Token not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    },\n    \"/cards/cardstatus\": {\n      \"post\": {\n        \"operationId\": \"changeCardStatus\",\n        \"tags\": [\n          \"Cards\"\n        ],\n        \"summary\": \"Change Card Status\",\n        \"description\": \"Change a card’s status to **Active** or **Deactivated**.\",\n        \"parameters\": [\n          __refMap[\"#/components/parameters/apiKey\"],\n          __refMap[\"#/components/parameters/contentType\"]\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"CardStatus\",\n                  \"CardRefNum\"\n                ],\n                \"properties\": {\n                  \"CardStatus\": {\n                    \"type\": \"string\",\n                    \"description\": \"Allowed values ⇒ **Active** | **Deactivated**\",\n                    \"enum\": [\n                      \"Active\",\n                      \"Deactivated\"\n                    ],\n                    \"examples\": [\n                      \"Active\"\n                    ]\n                  },\n                  \"CardRefNum\": {\n                    \"type\": \"string\",\n                    \"description\": \"Unique card reference number.\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"SUCCESS_CARDSTATUS_CHANGED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"status\"\n                      ],\n                      \"properties\": {\n                        \"status\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Active\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"successResponse\": {\n                    \"summary\": \"Successful card-status change\",\n                    \"value\": {\n                      \"code\": \"SUCCESS_CARDSTATUS_CHANGED\",\n                      \"params\": {\n                        \"status\": \"Active\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request – validation failed\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_VALIDATION_FAILED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"missingProperty\"\n                      ],\n                      \"properties\": {\n                        \"missingProperty\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"CardRefNum\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"badRequestExample\": {\n                    \"summary\": \"Missing required field\",\n                    \"value\": {\n                      \"code\": \"ERR_VALIDATION_FAILED\",\n                      \"params\": {\n                        \"missingProperty\": \"CardRefNum\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"409\": {\n            \"description\": \"Conflict – card declined\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"required\": [\n                    \"code\",\n                    \"params\"\n                  ],\n                  \"properties\": {\n                    \"code\": {\n                      \"type\": \"string\",\n                      \"examples\": [\n                        \"ERR_CARD_DECLINED\"\n                      ]\n                    },\n                    \"params\": {\n                      \"type\": \"object\",\n                      \"required\": [\n                        \"reason\"\n                      ],\n                      \"properties\": {\n                        \"reason\": {\n                          \"type\": \"string\",\n                          \"examples\": [\n                            \"Token not found\"\n                          ]\n                        }\n                      }\n                    }\n                  }\n                },\n                \"examples\": {\n                  \"conflictExample\": {\n                    \"summary\": \"Card declined – token not found\",\n                    \"value\": {\n                      \"code\": \"ERR_CARD_DECLINED\",\n                      \"params\": {\n                        \"reason\": \"Token not found\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"504\": __refMap[\"#/components/responses/LambdaTimeout\"]\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"responses\": {\n      \"LambdaTimeout\": {\n        \"description\": \"Gateway Timeout – task took too long\",\n        \"content\": {\n          \"application/json\": {\n            \"schema\": {\n              \"type\": \"object\",\n              \"required\": [\n                \"errorMessage\"\n              ],\n              \"properties\": {\n                \"errorMessage\": {\n                  \"type\": \"string\",\n                  \"examples\": [\n                    \"Task timed out after 1.10 seconds\"\n                  ]\n                }\n              }\n            },\n            \"examples\": {\n              \"lambdaTimeout\": {\n                \"summary\": \"Lambda execution timed out\",\n                \"value\": {\n                  \"errorMessage\": \"Task timed out after 1.10 seconds\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"schemas\": {\n      \"SuccessEnvelope\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"SUCCESS_REQUEST_PROCESSED\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"requestType\"\n            ],\n            \"properties\": {\n              \"requestType\": {\n                \"type\": \"string\",\n                \"examples\": [\n                  \"NewAccountNewCustomer\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"BadRequest\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"ERR_VALIDATION_FAILED\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"missingProperty\"\n            ],\n            \"properties\": {\n              \"missingProperty\": {\n                \"type\": \"string\",\n                \"examples\": [\n                  \"RequestType\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"CardAlreadyAssigned\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"code\",\n          \"params\"\n        ],\n        \"properties\": {\n          \"code\": {\n            \"type\": \"string\",\n            \"examples\": [\n              \"ERR_CARD_ALREADY_ASSIGNED\"\n            ]\n          },\n          \"params\": {\n            \"type\": \"object\",\n            \"required\": [\n              \"message\"\n            ],\n            \"properties\": {\n              \"message\": {\n                \"type\": \"string\",\n                \"examples\": [\n                  \"This Card Is Already Assigned To A Customer!\"\n                ]\n              }\n            }\n          }\n        }\n      },\n      \"Customer\": {\n        \"type\": \"object\",\n        \"required\": [\n          \"RequestType\",\n          \"AccountNum\",\n          \"CardRefNum\",\n          \"EmbossedName\",\n          \"NationalId\",\n          \"Passport\",\n          \"FirstName\",\n          \"LastName\"\n        ],\n        \"properties\": {\n          \"RequestType\": {\n            \"type\": \"string\",\n            \"description\": \"- `NewAccountNewCustomer`: New customer  \\n- `NewAccountExistingCustomer`: Existing customer\\n\"\n          },\n          \"CardRefNum\": {\n            \"type\": \"string\"\n          },\n          \"EmbossedName\": {\n            \"type\": \"string\"\n          },\n          \"AccountNum\": {\n            \"type\": \"string\"\n          },\n          \"FirstName\": {\n            \"type\": \"string\",\n            \"description\": \"Mandatory for new customers\"\n          },\n          \"MiddleName\": {\n            \"type\": \"string\"\n          },\n          \"LastName\": {\n            \"type\": \"string\",\n            \"description\": \"Mandatory for new customers\"\n          },\n          \"NationalId\": {\n            \"type\": \"string\",\n            \"description\": \"Mandatory if Passport is not provided\"\n          },\n          \"Passport\": {\n            \"type\": \"string\",\n            \"description\": \"Mandatory if NationalId is not provided\"\n          },\n          \"BirthDate\": {\n            \"type\": \"string\",\n            \"format\": \"date\",\n            \"pattern\": \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\",\n            \"description\": \"Date of birth in YYYY-MM-DD format\",\n            \"examples\": [\n              \"1990-01-01\"\n            ]\n          },\n          \"Email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"MobilePhone\": {\n            \"type\": \"string\"\n          },\n          \"StreetTitle\": {\n            \"type\": \"string\"\n          },\n          \"Zip\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"parameters\": {\n      \"apiKey\": {\n        \"name\": \"x-api-key\",\n        \"in\": \"header\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\"\n        }\n      },\n      \"contentType\": {\n        \"name\": \"Content-Type\",\n        \"in\": \"header\",\n        \"required\": true,\n        \"schema\": {\n          \"type\": \"string\",\n          \"default\": \"application/json\"\n        }\n      }\n    }\n  }\n};"],"names":["__refs","__refMap","schema"],"mappings":"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gC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,+BAA+B,EAClD,SAAY,CACV,QAAW,CACT,MAAS,CACP,YAAe,wBACf,SAAY,MACZ,UAAa,SACb,UAAa,aACb,SAAY,cACZ,MAAS,gBACT,YAAe,aACf,YAAe,cACf,IAAO,WACP,WAAc,eACd,WAAc,SACd,aAAgB,YACpC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sBACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,sCAAsC,EACzD,SAAY,CACV,cAAiB,CACf,QAAW,yBACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,YAAe,uBACvC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,iCAAiC,EACpD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,gBAAmB,aAC3C,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,mCACf,QAAW,CACT,mBAAoB,CAClB,OAAUA,EAAS,0CAA0C,EAC7D,SAAY,CACV,cAAiB,CACf,QAAW,gCACX,MAAS,CACP,KAAQ,4BACR,OAAU,CACR,QAAW,8CACnC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,YAAe,wBACf,SAAY,CACV,mCACxB,CACA,CACA,CACiB,EACD,SAAY,CACV,cAAiB,CACf,QAAW,6BACX,MAAS,CACP,aAAgB,mCACtC,CACA,CACA,CACA,CACA,CACA,CACA,CACA,CACK,EACD,wBAAyB,CACvB,KAAQ,CACN,YAAe,wBACf,QAAW,2BACX,YAAe,uGACf,KAAQ,CACN,OACD,EACD,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,YAAe,2CACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACA,YACD,EACD,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,YAAe,uBAChB,EACD,eAAkB,CAChB,KAAQ,SACR,YAAe,mDACnC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,0BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,6BACX,MAAS,CACP,KAAQ,2BACR,OAAU,CACR,OAAU,SAClC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACD,EACD,WAAc,CACZ,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,YAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,gBAAmB,YAC3C,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,6BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,wBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACD,EACD,WAAc,CACZ,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,iBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,kBACX,MAAS,CACP,KAAQ,yBACR,OAAU,CACR,gBAAmB,iBAC3C,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACK,EACD,oBAAqB,CACnB,KAAQ,CACN,YAAe,mBACf,KAAQ,CACN,OACD,EACD,QAAW,qBACX,YAAe,2DACf,WAAc,CACZA,EAAS,gCAAgC,EACzCA,EAAS,qCAAqC,CAC/C,EACD,YAAe,CACb,SAAY,GACZ,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,aACA,YACD,EACD,WAAc,CACZ,WAAc,CACZ,KAAQ,SACR,YAAe,gDACf,KAAQ,CACN,SACA,aACD,EACD,SAAY,CACV,QACtB,CACmB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,+BACnC,CACA,CACA,CACA,CACA,CACS,EACD,UAAa,CACX,IAAO,CACL,YAAe,sBACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,4BACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,gCACX,MAAS,CACP,KAAQ,6BACR,OAAU,CACR,OAAU,QAClC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,kCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACD,EACD,WAAc,CACZ,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,YAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,kBAAqB,CACnB,QAAW,yBACX,MAAS,CACP,KAAQ,wBACR,OAAU,CACR,gBAAmB,YAC3C,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAO,CACL,YAAe,2BACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,mBACxB,CACqB,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,QACD,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBAC5B,CACA,CACA,CACA,CACA,CACiB,EACD,SAAY,CACV,gBAAmB,CACjB,QAAW,kCACX,MAAS,CACP,KAAQ,oBACR,OAAU,CACR,OAAU,iBAClC,CACA,CACA,CACA,CACA,CACA,CACW,EACD,IAAOA,EAAS,sCAAsC,CAChE,CACA,CACA,CACG,EACD,WAAc,CACZ,UAAa,CACX,cAAiB,CACf,YAAe,uCACf,QAAW,CACT,mBAAoB,CAClB,OAAU,CACR,KAAQ,SACR,SAAY,CACV,cACD,EACD,WAAc,CACZ,aAAgB,CACd,KAAQ,SACR,SAAY,CACV,mCACpB,CACA,CACA,CACa,EACD,SAAY,CACV,cAAiB,CACf,QAAW,6BACX,MAAS,CACP,aAAgB,mCAClC,CACA,CACA,CACA,CACA,CACA,CACK,EACD,QAAW,CACT,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,aACD,EACD,WAAc,CACZ,YAAe,CACb,KAAQ,SACR,SAAY,CACV,uBAClB,CACA,CACA,CACA,CACA,CACO,EACD,WAAc,CACZ,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,uBACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,iBACD,EACD,WAAc,CACZ,gBAAmB,CACjB,KAAQ,SACR,SAAY,CACV,aAClB,CACA,CACA,CACA,CACA,CACO,EACD,oBAAuB,CACrB,KAAQ,SACR,SAAY,CACV,OACA,QACD,EACD,WAAc,CACZ,KAAQ,CACN,KAAQ,SACR,SAAY,CACV,2BACd,CACW,EACD,OAAU,CACR,KAAQ,SACR,SAAY,CACV,SACD,EACD,WAAc,CACZ,QAAW,CACT,KAAQ,SACR,SAAY,CACV,8CAClB,CACA,CACA,CACA,CACA,CACO,EACD,SAAY,CACV,KAAQ,SACR,SAAY,CACV,cACA,aACA,aACA,eACA,aACA,WACA,YACA,UACD,EACD,WAAc,CACZ,YAAe,CACb,KAAQ,SACR,YAAe,gGAChB,EACD,WAAc,CACZ,KAAQ,QACT,EACD,aAAgB,CACd,KAAQ,QACT,EACD,WAAc,CACZ,KAAQ,QACT,EACD,UAAa,CACX,KAAQ,SACR,YAAe,6BAChB,EACD,WAAc,CACZ,KAAQ,QACT,EACD,SAAY,CACV,KAAQ,SACR,YAAe,6BAChB,EACD,WAAc,CACZ,KAAQ,SACR,YAAe,uCAChB,EACD,SAAY,CACV,KAAQ,SACR,YAAe,yCAChB,EACD,UAAa,CACX,KAAQ,SACR,OAAU,OACV,QAAW,yBACX,YAAe,qCACf,SAAY,CACV,YACd,CACW,EACD,MAAS,CACP,KAAQ,SACR,OAAU,OACX,EACD,YAAe,CACb,KAAQ,QACT,EACD,YAAe,CACb,KAAQ,QACT,EACD,IAAO,CACL,KAAQ,QACpB,CACA,CACA,CACK,EACD,WAAc,CACZ,OAAU,CACR,KAAQ,YACR,GAAM,SACN,SAAY,GACZ,OAAU,CACR,KAAQ,QAClB,CACO,EACD,YAAe,CACb,KAAQ,eACR,GAAM,SACN,SAAY,GACZ,OAAU,CACR,KAAQ,SACR,QAAW,kBACrB,CACA,CACA,CACA,CACA","x_google_ignoreList":[0]}